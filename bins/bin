#!/bin/bash
source "$VIRO_HOME/src/utils.sh"

BINS="$VIRO_HOME/user/bins"

# Flags
# NOTE: if a flag takes an argument you need to `shift 2`, otherwise just `shift`
# =====================================================================================================================
PARAMS=""
while (( "$#" )); do case "$1" in
  -h|--help) man "${BASH_SOURCE[0]}" && exit 0;;
  --core) BINS="$VIRO_HOME/bins" && shift;;

  --) shift && break;;
  -*|--*) log "Error: Unsupported flag $1" >&2 && exit 1;;
  *) PARAMS="$PARAMS $1" && shift;;
esac; done
eval set -- "$PARAMS"

[[ -e "$BINS" ]] || mkdir -p "$BINS"
case "$1" in
  ls)
    find "$BINS" -type f -exec basename {} \; | fzf -m --reverse --preview "cat $BINS/{}"
    ;;
  create)
    name="${2:-"$(prompt "name:")"}"
    [[ -z "$name" ]] && log "No bins were added" && exit 1
    [[ -f "$BINS/$name" ]] && {
      log "$name already exists"
      log "try: bin edit $name"
      exit 1
    }
    cp "$VIRO_HOME/templates/bin" "$BINS/$name"
    [[ -x "$BINS/$name" ]] || chmod +x "$BINS/$name"
    "$VISUAL" "$BINS/$name"
    ;;
  edit)
    name=${2:-"$(bin ls)"}
    [[ -z "$name" ]] && log "Nothing to edit" && exit 1
    [[ -f "$BINS/$name" ]] || {
      log "$name doesn't exist"
      log "try: bin create $name"
      exit 1
    }
    [[ -x "$BINS/$name" ]] || chmod +x "$BINS/$name"
    "$VISUAL" "$BINS/$name"
    ;;
  rm)
    names=${2:-"$(bin ls)"}
    [[ -z "$names" ]] && log "No bins were removed" && exit 1
    for name in $names; do
      rm -rf "${BINS:?}/$name"
      log "$name was removed"
    done
    ;;
  rename)
    old=${2:-"$(bins ls)"}
    new="${3:-"$(prompt "new name:")"}"
    mv "$BINS/$old" "$BINS/$new"
    log "renamed $old to $new"
    ;;
esac
